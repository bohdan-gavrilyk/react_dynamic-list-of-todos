{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","openTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","value","onChange","target","ALL","ACTIVE","COMPLETED","placeholder","e","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","closeTodo","useState","user","setUser","loadingUser","setLoadingUser","fetchUser","a","data","useEffect","href","email","name","App","setTodos","setSelectedTodo","loadingData","setLoadingData","visibleTodos","filter","returnArr","toLowerCase","includes","filteredTodos","fetchTodos","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,kGCUCC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GACT,IACEC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,UAIF,OACE,qBAEE,UAAQ,OACRL,UAAU,GAHZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWM,IACZD,EAAY,mBAAqB,mBADnC,SAIGD,MAGL,oBAAIJ,UAAU,8BAAd,UACa,OAAVF,QAAU,IAAVA,OAAA,EAAAA,EAAYK,MAAOD,EAAKC,GACvB,wBACE,UAAQ,eACRH,UAAU,SACVO,KAAK,SAHP,SAKE,sBAAMP,UAAU,OAAhB,SACE,mBAAGA,UAAU,yBAIjB,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPT,EAASG,IALb,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBAzChBG,a,SDzCPR,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEUL,IAAMc,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOJ,EACPK,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXL,EAAYK,EAAOF,QAJvB,UAOE,wBAAQA,MAAOnB,EAAOsB,IAAtB,iBACA,wBAAQH,MAAOnB,EAAOuB,OAAtB,oBACA,wBAAQJ,MAAOnB,EAAOwB,UAAtB,8BAKN,oBAAGnB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVoB,YAAY,YACZN,MAAOF,EACPG,SAAU,SAACM,GACTR,EAASQ,EAAEL,OAAOF,UAGtB,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GACC,sBAAMZ,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SACE,wBACE,UAAQ,oBACRhB,KAAK,SACLP,UAAU,SACV,aAAW,SACXQ,QAAS,WACPK,EAAS,gBC7CzB,SAASW,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KCpBlDC,G,MAAmB,kBAC9B,qBAAKrC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCMNsC,EAA6B,SAAC,GAGpC,IAFLxC,EAEI,EAFJA,WACAyC,EACI,EADJA,UAEA,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEER,EAIEtC,EAJFsC,OACAjC,EAGEL,EAHFK,GACAC,EAEEN,EAFFM,MACAC,EACEP,EADFO,UAEIwC,EAAS,uCAAG,4BAAAC,EAAA,+EAEKX,EAAQC,GAFb,OAERW,EAFQ,OAIdL,EAAQK,GAJM,uBAMdH,GAAe,GAND,uEAAH,qDAcf,OAJAI,qBAAU,WACRH,MACC,IAGD,sBAAK7C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACd2C,GAAe,cAAC,EAAD,IACfF,GACC,sBAAKzC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYG,KAIZ,wBACEK,QAAS+B,EACThC,KAAK,SACLP,UAAU,SACV,UAAQ,mBAIZ,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGI,IAGH,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UACGK,EACI,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEJ,OAED,mBAAGiD,KAAI,iBAAYR,EAAKS,OAAxB,SACGT,EAAKU,oBC3Cf,IAAMC,EAAgB,WAC3B,MAA0BZ,mBAAiB,IAA3C,mBAAO3C,EAAP,KAAcwD,EAAd,KACA,EAAsCb,mBAAsB,MAA5D,mBAAO1C,EAAP,KAAmBwD,EAAnB,KACA,EAAgCd,mBAAiB7C,EAAOsB,KAAxD,mBAAOP,EAAP,KAAiBC,EAAjB,KACA,EAA0B6B,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcC,EAAd,KACA,EAAsC2B,oBAAS,GAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACMC,EAvBR,SAAuB5D,EAAc6D,EAAe9C,GAClD,IAAI+C,EAAS,YAAO9D,GAMpB,OAJIe,IACF+C,EAAYA,EAAUD,QAAO,SAAAxD,GAAI,OAAIA,EAAKE,MAAMwD,cAAcC,SAASjD,EAAMgD,mBAGvEF,GACN,KAAK/D,EAAOuB,OACV,OAAOyC,EAAUD,QAAO,SAAAxD,GAAI,OAAKA,EAAKG,aACxC,KAAKV,EAAOwB,UACV,OAAOwC,EAAUD,QAAO,SAAAxD,GAAI,OAAIA,EAAKG,aACvC,QACE,OAAOsD,GAUUG,CAAcjE,EAAOa,EAAUE,GAE9CmD,EAAU,uCAAG,4BAAAjB,EAAA,+EHjBStB,EAAY,UGiBrB,OAETuB,EAFS,OAIfM,EAASN,GAJM,uBAMfS,GAAe,GANA,uEAAH,qDAsBhB,OAJAR,qBAAU,WACRe,MACC,IAGD,qCACE,qBAAK/D,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,SAAUA,EACVC,YAAaA,EACbC,MAAOA,EACPC,SAAUA,MAId,qBAAKb,UAAU,QAAf,SACGuD,EAAc,cAAC,EAAD,IACb,cAAC,EAAD,CACE1D,MAAO4D,EACP3D,WAAYA,EACZC,SAjCC,SAACG,GAChBoD,EAAgBpD,eAuCbJ,GAAc,cAAC,EAAD,CAAWA,WAAYA,EAAYyC,UApCpC,WAChBe,EAAgB,aClDpBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c85a98b4.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: Todo | null;\n  openTodo: (todo:Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  openTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n            // userId,\n          } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  completed ? 'has-text-success' : 'has-text-danger',\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {selectTodo?.id === todo.id ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      openTodo(todo);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filterBy: Filter;\n  setFilterBy: (filterBy: Filter) => void;\n  query: string;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={({ target }) => {\n              setFilterBy(target.value as Filter);\n            }}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectTodo: Todo;\n  closeTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  closeTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = selectTodo;\n  const fetchUser = async () => {\n    try {\n      const data = await getUser(userId);\n\n      setUser(data);\n    } finally {\n      setLoadingUser(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loadingUser && <Loader />}\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={closeTodo}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nfunction filteredTodos(todos:Todo[], filter:Filter, query:string) {\n  let returnArr = [...todos];\n\n  if (query) {\n    returnArr = returnArr.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  switch (filter) {\n    case Filter.ACTIVE:\n      return returnArr.filter(todo => !todo.completed);\n    case Filter.COMPLETED:\n      return returnArr.filter(todo => todo.completed);\n    default:\n      return returnArr;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.ALL);\n  const [query, setQuery] = useState('');\n  const [loadingData, setLoadingData] = useState(true);\n  const visibleTodos = filteredTodos(todos, filterBy, query);\n\n  const fetchTodos = async () => {\n    try {\n      const data = await getTodos();\n\n      setTodos(data);\n    } finally {\n      setLoadingData(false);\n    }\n  };\n\n  const openTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closeTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadingData ? <Loader /> : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectTodo={selectTodo}\n                  openTodo={openTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectTodo && <TodoModal selectTodo={selectTodo} closeTodo={closeTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}